import React, { StrictMode, useEffect, useMemo, useRef, useState } from "react";
import { createRoot } from "react-dom/client";
import "./index.css";

/* ===== –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===== */
const INSTAGRAM_URL = "https://www.instagram.com/kyivdinnerclub/";

/* ===== –¢–û–í–ê–†–ò (–∫–∞—Ä—Ç–∏–Ω–∫–∏ –º–∞—é—Ç—å –ª–µ–∂–∞—Ç–∏ –≤ public/img/) ===== */
const PRODUCTS = [
  {
    id: "dark",
    title: "Dark Chocolate Dates",
    price: 300,
    img: "/img/dark.png",
    desc: "–§—ñ–Ω—ñ–∫–∏ –±–µ–∑ –∫—ñ—Å—Ç–æ—á–∫–∏, —Ç–µ–º–Ω–∏–π —à–æ–∫–æ–ª–∞–¥, –∞—Ä–∞—Ö—ñ—Å–æ–≤–∞ –ø–∞—Å—Ç–∞, –º–∞–ª—å–¥–æ–Ω—Å—å–∫–∞ —Å—ñ–ª—å.",
  },
  {
    id: "milk",
    title: "Milk Chocolate Dates",
    price: 300,
    img: "/img/milk.png",
    desc: "–§—ñ–Ω—ñ–∫–∏ –±–µ–∑ –∫—ñ—Å—Ç–æ—á–∫–∏, –º–æ–ª–æ—á–Ω–∏–π —à–æ–∫–æ–ª–∞–¥, –∞—Ä–∞—Ö—ñ—Å–æ–≤–∞ –ø–∞—Å—Ç–∞, –º–∞–ª—å–¥–æ–Ω—Å—å–∫–∞ —Å—ñ–ª—å.",
  },
  {
    id: "white-pistachio",
    title: "White Chocolate & Pistachio Dates",
    price: 375,
    img: "/img/white-pistachio.png",
    desc: "–§—ñ–Ω—ñ–∫–∏ –±–µ–∑ –∫—ñ—Å—Ç–æ—á–∫–∏, –±—ñ–ª–∏–π —à–æ–∫–æ–ª–∞–¥, —Ñ—ñ—Å—Ç–∞—à–∫–æ–≤–∞ –ø–∞—Å—Ç–∞, –≤–µ—Ä—à–∫–∏.",
  },
  {
    id: "caramel",
    title: "Caramel Chocolate & Walnut Dates",
    price: 350,
    img: "/img/caramel.png",
    desc: "–ö–∞—Ä–∞–º–µ–ª—å–Ω–∏–π —à–æ–∫–æ–ª–∞–¥, –ø—Ä–∞–ª—ñ–Ω–µ –∑ –≥—Ä–µ—Ü—å–∫–æ–≥–æ –≥–æ—Ä—ñ—Ö–∞, –≤–æ–ª–æ—Å—å–∫–∏–π –≥–æ—Ä—ñ—Ö.",
  },

  // üíö –ù–æ–≤–∏–π –ø—Ä–æ–¥—É–∫—Ç ‚Äî –º—ñ–∂ Caramel —ñ Mixed
  {
    id: "matcha-raspberry",
    title: "Matcha & Raspberry Dates",
    price: 375,
    img: "/img/matcha-raspberry.png",
    desc: "–§—ñ–Ω—ñ–∫–∏ –±–µ–∑ –∫—ñ—Å—Ç–æ—á–∫–∏, –≥–∞–Ω–∞—à –∑ –º–∞–ª–∏–Ω–æ–≤–∏–º –ø—é—Ä–µ, –±—ñ–ª–∏–π —à–æ–∫–æ–ª–∞–¥ –∑ –º–∞—Ç—á–∞.",
  },

  {
    id: "mixed",
    title: "Mixed (Milk & Dark) Chocolate Dates",
    price: 300,
    img: "/img/mixed.png",
    desc: "–ú—ñ–∫—Å –º–æ–ª–æ—á–Ω–æ–≥–æ –π —Ç–µ–º–Ω–æ–≥–æ —à–æ–∫–æ–ª–∞–¥—É, –∞—Ä–∞—Ö—ñ—Å–æ–≤–∞ –ø–∞—Å—Ç–∞, –º–∞–ª—å–¥–æ–Ω—Å—å–∫–∞ —Å—ñ–ª—å.",
  },
];
const fmt = (n) => `${n} –≥—Ä–Ω`;

/* ================= APP ================= */
function App() {
  const [cart, setCart] = useState([]);            // [{id,title,price,img,qty}]
  const [cartOpen, setCartOpen] = useState(false);
  const [stage, setStage] = useState("cart");      // "cart" | "checkout"

  // –ö–æ–ª–∏ –º–æ–¥–∞–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ ‚Äî —Ö–æ–≤–∞—î–º–æ IG/Cart —ñ –Ω–µ –¥–∞—î–º–æ –ø–µ—Ä–µ–∫—Ä–∏–≤–∞—Ç–∏
  useEffect(() => {
    if (cartOpen) document.body.classList.add("modal-open");
    else document.body.classList.remove("modal-open");
    return () => document.body.classList.remove("modal-open");
  }, [cartOpen]);

  function addItem(p, qty = 1) {
    setCart(prev => {
      const i = prev.findIndex(x => x.id === p.id);
      if (i === -1) return [...prev, { ...p, qty }];
      const copy = [...prev];
      copy[i] = { ...copy[i], qty: Math.min(99, copy[i].qty + qty) };
      return copy;
    });
    setCartOpen(true);
    setStage("cart");
  }

  function changeQty(id, d) {
    setCart(prev => prev.map(it => it.id===id ? {...it, qty: Math.max(1, Math.min(99, it.qty + d))} : it));
  }

  function removeItem(id){ setCart(prev => prev.filter(it => it.id!==id)); }
  function clearCart(){ setCart([]); }

  const total = useMemo(() => cart.reduce((s,it)=>s+it.price*it.qty,0), [cart]);
  const count = useMemo(() => cart.reduce((s,it)=>s+it.qty,0), [cart]);

  return (
    <>
      <Header count={count} onOpen={()=>setCartOpen(true)} />

      <main className="container">
        <Catalog products={PRODUCTS} onBuy={addItem} />
      </main>

      {cartOpen && (
        <Modal onClose={()=>{setCartOpen(false); setStage("cart");}}>
          <div className="modalHead">
            <h3>{stage === "cart" ? "–ö–æ—à–∏–∫" : "–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è"}</h3>
            <button className="iconBtn" onClick={()=>{setCartOpen(false); setStage("cart");}} aria-label="–ó–∞–∫—Ä–∏—Ç–∏">√ó</button>
          </div>

          {stage === "cart" ? (
            cart.length === 0 ? (
              <div className="cartEmpty">
                <p>–ü–æ—Ä–æ–∂–Ω—å–æ. –î–æ–¥–∞–π—Ç–µ —â–æ—Å—å —Å–º–∞—á–Ω–µ üôÇ</p>
                <button className="btn ghost" onClick={()=>setCartOpen(false)}>–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É</button>
              </div>
            ) : (
              <>
                <ul className="cartList">
                  {cart.map(it => (
                    <li className="cartRow" key={it.id}>
                      <img className="thumb" src={it.img} alt={it.title} />
                      <div className="cTitle">{it.title}</div>
                      <div className="qtyRow">
                        <button className="qtyBtn" onClick={()=>changeQty(it.id,-1)} aria-label="–ú–µ–Ω—à–µ">‚Äì</button>
                        <span className="qty">{it.qty}</span>
                        <button className="qtyBtn" onClick={()=>changeQty(it.id,1)} aria-label="–ë—ñ–ª—å—à–µ">+</button>
                      </div>
                      <div className="cPrice">{fmt(it.price * it.qty)}</div>
                      <button className="iconBtn rowX" onClick={()=>removeItem(it.id)} aria-label="–í–∏–¥–∞–ª–∏—Ç–∏">√ó</button>
                    </li>
                  ))}
                </ul>

                <div className="modalFoot">
                  <div className="sum">–í—Å—å–æ–≥–æ: <b>{fmt(total)}</b></div>
                  <div className="actions">
                    <button className="btn ghost" onClick={()=>setCartOpen(false)}>–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏</button>
                    <button className="btn primary" onClick={()=>setStage("checkout")}>–û—Ñ–æ—Ä–º–∏—Ç–∏</button>
                  </div>
                </div>
              </>
            )
          ) : (
            <>
              <div className="summaryInModal">
                {cart.map(it => (
                  <div className="summaryRow" key={it.id}>
                    <img className="thumb" src={it.img} alt={it.title} />
                    <div className="cTitle">{it.title}</div>
                    <div className="qtyRow">
                      <button className="qtyBtn" onClick={()=>changeQty(it.id,-1)} aria-label="–ú–µ–Ω—à–µ">‚Äì</button>
                      <span className="qty">{it.qty}</span>
                      <button className="qtyBtn" onClick={()=>changeQty(it.id,1)} aria-label="–ë—ñ–ª—å—à–µ">+</button>
                    </div>
                    <div className="cPrice">{fmt(it.price * it.qty)}</div>
                  </div>
                ))}
                <div className="summaryFoot">–í—Å—å–æ–≥–æ: <b>{fmt(total)}</b></div>
              </div>

              <form className="formInModal" onSubmit={(e)=>{e.preventDefault(); alert("–¢—É—Ç –±—É–¥–µ –ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ MonoPay."); clearCart(); setStage("cart"); setCartOpen(false);}}>
                <div className="grid2">
                  <div>
                    <label>–Ü–º‚Äô—è</label>
                    <input name="firstName" required placeholder="–Ü–º‚Äô—è –æ—Ç—Ä–∏–º—É–≤–∞—á–∞" />
                  </div>
                  <div>
                    <label>–ü—Ä—ñ–∑–≤–∏—â–µ</label>
                    <input name="lastName" required placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ" />
                  </div>
                </div>
                <div>
                  <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                  <input name="phone" required placeholder="+380XXXXXXXXX" />
                </div>
                <div>
                  <label>–ú—ñ—Å—Ç–æ / –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏</label>
                  <input name="np" required placeholder="–ö–∏—ó–≤, –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ‚Ññ..." />
                </div>

                <div className="modalFoot">
                  <div className="sum">–í—Å—å–æ–≥–æ: <b>{fmt(total)}</b></div>
                  <div className="actions">
                    <button type="button" className="btn ghost" onClick={()=>setStage("cart")}>–ù–∞–∑–∞–¥ –¥–æ –∫–æ—à–∏–∫–∞</button>
                    <button type="submit" className="btn primary">–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —Ç–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏</button>
                  </div>
                </div>
              </form>
            </>
          )}
        </Modal>
      )}

      <footer className="footer">
        <div className="payRow">
          <img className="payIcon" src="/pay/apple-pay.svg" alt="Apple Pay" />
          <img className="payIcon" src="/pay/google-pay.svg" alt="Google Pay" />
          <img className="payIcon" src="/pay/visa.svg" alt="Visa" />
          <img className="payIcon" src="/pay/mastercard.svg" alt="Mastercard" />
        </div>
        <div className="copy">¬© 2025 IT‚ÄôS A DATE by Kyiv Dinner Club</div>
      </footer>
    </>
  );
}

/* ================= –•–ï–î–ï–† ================= */
function Header({ count, onOpen }) {
  const titleRef = useRef(null);
  const cartRef = useRef(null);
  const igRef = useRef(null);

  useEffect(()=>{
    const align=()=>{
      const t=titleRef.current, c=cartRef.current, ig=igRef.current;
      if (!t) return;

      // –ù–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É ‚Äî —Ñ—ñ–∫—Å—É—î–º–æ —É –≤–µ—Ä—Ö–Ω—å–æ–º—É –ø—Ä–∞–≤–æ–º—É –∫—É—Ç—ñ (—â–æ–± –Ω–µ –Ω–∞–∫–ª–∞–¥–∞–ª–æ—Å—å)
      if (window.innerWidth <= 640) {
        if (c) c.style.top = "12px";
        if (ig) ig.style.top = "12px";
        return;
      }
      // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø—ñ ‚Äî –ø–æ —Ü–µ–Ω—Ç—Ä—É –∑–∞–≥–æ–ª–æ–≤–∫—É
      const tb = t.getBoundingClientRect();
      const top = window.scrollY + tb.top + (tb.height - 28)/2;
      if (c) c.style.top = `${Math.round(top)}px`;
      if (ig) ig.style.top = `${Math.round(top)}px`;
    };

    align();
    window.addEventListener("resize",align);
    window.addEventListener("scroll",align,{passive:true});
    return ()=>{window.removeEventListener("resize",align); window.removeEventListener("scroll",align);};
  },[]);

  return (
    <header className="siteHeader">
      <div className="siteHeader__inner">
        <div className="brandWrap">
          <h1 ref={titleRef} className="brand">IT‚ÄôS A DATE!</h1>
          <div className="subBrand">by Kyiv Dinner Club</div>
        </div>
      </div>

      <a
        ref={igRef}
        className="igFixed"
        href={INSTAGRAM_URL}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="Instagram"
      >
        <InstagramSvg />
      </a>

      <button
        ref={cartRef}
        className="cartFixed"
        onClick={onOpen}
        aria-label="–ö–æ—à–∏–∫"
      >
        <CartSvg />
        {!!count && <span className="cartBadge">{count}</span>}
      </button>
    </header>
  );
}

/* ================= –Ü–ö–û–ù–ö–ò ================= */
const CartSvg = ({ size=28 }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none"
    xmlns="http://www.w3.org/2000/svg" role="img" aria-label="–ö–æ—à–∏–∫">
    <path d="M6 6h14l-1.6 7.2a2 2 0 0 1-2 1.6H9.1a2 2 0 0 1-2-1.5L5.2 3.8H3"
      stroke="#111" strokeWidth="1.8" strokeLinecap="round" strokeLinejoin="round"/>
    <circle cx="9.5" cy="19.5" r="1.5" fill="#111"/>
    <circle cx="16.5" cy="19.5" r="1.5" fill="#111"/>
  </svg>
);

const InstagramSvg = ({ size=28 }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none"
    xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Instagram">
    <rect x="3" y="3" width="18" height="18" rx="5" stroke="#111" strokeWidth="1.8"/>
    <circle cx="12" cy="12" r="3.8" stroke="#111" strokeWidth="1.8"/>
    <circle cx="17.3" cy="6.7" r="1.2" fill="#111"/>
  </svg>
);

/* ================= –ö–ê–¢–ê–õ–û–ì ================= */
function Catalog({ products, onBuy }) {
  const [qtyMap, setQtyMap] = useState({});
  const setQty = (id, f) => setQtyMap(m => ({...m, [id]: Math.max(1, Math.min(99, f(m[id]||1)))}));

  return (
    <section className="grid">
      {products.map(p => (
        <article className="card" key={p.id}>
          <div className="imgWrap">
            <img src={p.img} alt={p.title} />
          </div>
          <h3 className="cardTitle">{p.title}</h3>
          {p.desc && <p className="cardDesc">{p.desc}</p>}
          <div className="cardFooter">
            <div className="price">{fmt(p.price)}</div>
            <div className="qtyGroup">
              <button className="qtyBtn" onClick={()=>setQty(p.id,n=>n-1)} aria-label="–ú–µ–Ω—à–µ">‚Äì</button>
              <span className="qtyVal">{qtyMap[p.id]||1}</span>
              <button className="qtyBtn" onClick={()=>setQty(p.id,n=>n+1)} aria-label="–ë—ñ–ª—å—à–µ">+</button>
            </div>
            <button className="buyBtn" onClick={()=>onBuy(p, qtyMap[p.id]||1)}>–ö—É–ø–∏—Ç–∏</button>
          </div>
        </article>
      ))}
    </section>
  );
}

/* ================= –ú–û–î–ê–õ–ö–ê ================= */
function Modal({ children, onClose }) {
  return (
    <div className="modalOverlay" onClick={onClose}>
      <div className="modal" role="dialog" aria-modal="true" onClick={(e)=>e.stopPropagation()}>
        {children}
      </div>
    </div>
  );
}

createRoot(document.getElementById("root")).render(
  <StrictMode><App /></StrictMode>
);